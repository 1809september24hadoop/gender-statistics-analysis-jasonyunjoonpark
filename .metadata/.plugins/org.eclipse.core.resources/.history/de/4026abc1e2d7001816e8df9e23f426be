package com.revature;

import org.apache.hadoop.fs.Path;
import org.apache.hadoop.io.DoubleWritable;
import org.apache.hadoop.io.Text;
import org.apache.hadoop.mapreduce.Job;
import org.apache.hadoop.mapreduce.lib.input.FileInputFormat;
import org.apache.hadoop.mapreduce.lib.output.FileOutputFormat;

import com.revature.map.MapperTwo;
import com.revature.reduce.ReducerTwo;




public class ProjectOne {

	public static void main(String[] args) throws Exception {

		if (args.length != 2) {
			System.out.printf(
					"Usage: WordCount <input dir> <output dir>\n");
			System.exit(-1);
		}

		Job job = new Job();

		job.setJarByClass(ProjectOne.class);

		job.setJobName("Project One");


		FileInputFormat.setInputPaths(job, new Path(args[0]));
		FileOutputFormat.setOutputPath(job, new Path(args[1]));

		job.setMapperClass(MapperThree.class);
		job.setReducerClass(ReducerThree.class);

		
		/*
		 * For the word count application, the input file and output 
		 * files are in text format - the default format.
		 * 
		 * In text format files, each record is a line delineated by a 
		 * by a line terminator.
		 * 
		 * When you use other input formats, you must call the 
		 * SetInputFormatClass method. When you use other 
		 * output formats, you must call the setOutputFormatClass method.
		 */

		/*
		 * For the word count application, the mapper's output keys and
		 * values have the same data types as the reducer's output keys 
		 * and values: Text and IntWritable.
		 * 
		 * When they are not the same data types, you must call the 
		 * setMapOutputKeyClass and setMapOutputValueClass 
		 * methods.
		 */

		/*
		 * Specify the job's output key and value classes.
		 */
		job.setMapOutputKeyClass(Text.class);
		job.setMapOutputValueClass(DoubleWritable.class);
		
		job.setOutputKeyClass(Text.class);
		job.setOutputValueClass(DoubleWritable.class);

		/*
		 * Start the MapReduce job and wait for it to finish.
		 * If it finishes successfully, return 0. If not, return 1.
		 */
		boolean success = job.waitForCompletion(true);
		System.exit(success ? 0 : 1);
	}
}